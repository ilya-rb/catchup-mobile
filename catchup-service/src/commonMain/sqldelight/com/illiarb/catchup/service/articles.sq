import com.illiarb.catchup.service.domain.NewsSource;
import com.illiarb.catchup.service.domain.Tag;
import com.illiarb.catchup.service.domain.Url;
import kotlin.collections.List;
import kotlin.time.Duration;
import kotlinx.datetime.Instant;

CREATE TABLE IF NOT EXISTS `articleEntity`(
    `id` TEXT PRIMARY KEY NOT NULL,
    `title` TEXT NOT NULL,
    `shortSummary` TEXT,
    `link` TEXT AS Url NOT NULL,
    `tags` TEXT AS List<Tag>,
    `source` TEXT AS NewsSource.Kind NOT NULL,
    `createdAt` INTEGER AS Instant NOT NULL,
    `authorName` TEXT,
    `content` TEXT,
    `estimatedReadingTimeSeconds` INTEGER AS Duration,
    `saved` INTEGER NOT NULL
);

articlesBySource:
SELECT * FROM articleEntity WHERE source = :source;

articleById:
SELECT * FROM articleEntity WHERE id = :id LIMIT 1;

savedArticlesIds:
SELECT id FROM articleEntity WHERE saved = 1;

deleteBySourceExceptSaved:
DELETE FROM articleEntity WHERE source = :source AND saved = 0;

setSaved:
UPDATE articleEntity SET saved = :saved
WHERE id = :id;

insert:
INSERT INTO articleEntity (
    `id`,
    `title`,
    `shortSummary`,
    `link`,
    `tags`,
    `source`,
    `createdAt`,
    `authorName`,
    `content`,
    `estimatedReadingTimeSeconds`,
    `saved`
) VALUES (
    :id,
    :title,
    :shortSummary,
    :link,
    :tags,
    :source,
    :createdAt,
    :authorName,
    :content,
    :estimatedReadingTimeSeconds,
    :saved
);





