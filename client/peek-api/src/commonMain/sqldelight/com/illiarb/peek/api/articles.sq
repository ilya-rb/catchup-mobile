import com.illiarb.peek.api.domain.NewsSource;
import com.illiarb.peek.api.domain.Tag;
import com.illiarb.peek.core.types.Url;
import kotlin.collections.List;
import kotlinx.datetime.Instant;

CREATE TABLE IF NOT EXISTS `articleEntity`(
    `url` TEXT AS Url PRIMARY KEY NOT NULL,
    `title` TEXT NOT NULL,
    `tags` TEXT AS List<Tag>,
    `source` TEXT AS NewsSource.Kind NOT NULL,
    `date` INTEGER AS Instant NOT NULL,
    `saved` INTEGER NOT NULL
);

articlesBySource:
SELECT * FROM articleEntity WHERE source = :source;

articleByUrl:
SELECT * FROM articleEntity WHERE url = :url LIMIT 1;

savedArticlesUrls:
SELECT url FROM articleEntity WHERE saved = 1;

savedArticles:
SELECT * FROM articleEntity WHERE saved = 1;

setSaved:
UPDATE articleEntity SET saved = :saved
WHERE url = :url;

insert:
INSERT OR REPLACE INTO articleEntity (
    `url`,
    `title`,
    `tags`,
    `source`,
    `date`,
    `saved`
) VALUES (
    :url,
    :title,
    :tags,
    :source,
    :date,
    :saved
);





